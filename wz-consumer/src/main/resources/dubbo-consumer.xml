<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:wz="http://xiaoxiao.wz/schema/people"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://xiaoxiao.wz/schema/people
        http://xiaoxiao.wz/schema/people/people.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
        default-lazy-init = "false">
	<!--<bean id="dependService" class="com.wz.spring.depends.test.service.impl.DependServiceImpl" name="DependService实现">
		<property name="dependDao" ref="dependDao"/>
	</bean>
	<bean id="dependDao" class="com.wz.spring.depends.test.dao.DependDao" name="dao没有实现接口"/>
-->
	<!-- 循环依赖,构造注入 此种情况报异常-->
	<!--<bean id="circleA" class="com.wz.spring.depends.test.circledepend.CircleA">
		<constructor-arg name="b" ref="circleB" />
	</bean>
	<bean id="circleB" class="com.wz.spring.depends.test.circledepend.CircleB">
		<constructor-arg name="a" ref="circleA" />
	</bean>-->
	<!-- 循环依赖,设值注入 -->
	<!--<bean id="circleA" class="com.wz.spring.depends.test.circledepend.CircleA" >
		<property name="b" ref="circleB"></property>
	</bean>
	<bean id="circleB" class="com.wz.spring.depends.test.circledepend.CircleB" >
		<property name="a" ref="circleA"></property>
	</bean>-->
	<!-- 循环依赖,构造和设值注入,在前边的必须采用设值注入 -->
	<!--<bean id="circleA" class="com.wz.spring.depends.test.circledepend.CircleA" >
		<property name="b" ref="circleB"></property>
	</bean>
	<bean id="circleB" class="com.wz.spring.depends.test.circledepend.CircleB" >
		<constructor-arg name="a" ref="circleA" />
	</bean>-->

	<!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
	<dubbo:application name="consumer-of-helloworld-app" />
	<!-- zookeeper注册中心 -->
	<dubbo:registry  protocol="zookeeper" address="127.0.0.1:2181" />
	<!-- 使用multicast广播注册中心暴露的服务地址 -->
	<!--<dubbo:registry address="multicast://10.57.41.19:1234" /> -->
	 <!-- 生成远程服务代理，可以和本地bean一样使用demoService -->
	<dubbo:reference id="demoService" interface="com.wz.dubbo.api.DemoService" timeout="10000"/>

	<dubbo:protocol name="dubbo" port="20880" serialization="hessian2"/>

	<wz:people id="peoplewz" name="王振" age="27"/>

	<bean id="consumer1" class="com.wz.netty.future.wz.spring.ReferenceBean">
		<property name="address" value="127.0.0.1:2222"/>
		<property name="interfaceName" value="com.wz.dubbo.api.DemoService"/>
	</bean>
</beans>